/*
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Desktop.view.loan.LoanPanel', {
	extend: 'Ext.panel.Panel',
	alias: 'widget.loanPanel',

	requires: [
		'Desktop.view.loan.LoanController',
		'Desktop.view.loan.LoanViewModel',
		'Ext.tab.Panel',
		'Ext.tab.Tab',
		'Ext.grid.Panel',
		'Ext.grid.column.Boolean',
		'Ext.toolbar.Toolbar',
		'Ext.form.field.Text',
		'Ext.tree.Panel',
		'Ext.tree.View',
		'Ext.grid.filters.filter.Number',
		'Ext.grid.column.Date',
		'Ext.grid.filters.filter.Date',
		'Ext.grid.filters.filter.String',
		'Ext.grid.filters.filter.Boolean',
		'Ext.selection.CheckboxModel',
		'Ext.grid.filters.Filters',
		'Ext.grid.feature.Summary',
	],

	controller: 'loanPanel',

	viewModel: {
		type: 'loanPanel'
	},

	id: 'loanMain',
	autoShow: true,
	height: 649,
	width: 899,
	layout: 'border',
	maximized: true,
	minimizable: true,
	header: false,
	modal: true,
	items: [{
			xtype: 'tabpanel',
			region: 'center',
			layout: 'fit',
			id: 'loanHome',
			reference: 'loanHome',
			margin: '5 0 0 0',
			tabPosition: 'bottom',
			listeners: {
				tabchange:'onMainLoanTabChange'
			},
			items: [{
				xtype: 'panel',
				id: 'loanSearchPanel',
				layout: 'fit',
				title: 'Loan Search',
				tabConfig: {
					xtype: 'tab',
					id: 'loanSearchTabPanelId',
					itemId: 'loanSearchTabPanel'
				},
				dockedItems: [{
					xtype: 'panel',
					dock: 'top',
					itemId: 'loanSearchItemProperties',
					layout: 'column',
					collapseDirection: 'top',
					collapsed: false,
					collapsible: true,
					title: 'Loan Search',
					dockedItems: [{
						xtype: 'toolbar',
						dock: 'bottom',
						shadow: true,
						itemId: 'loanSearchTollbar',
						layout: {
							type: 'hbox',
							align: 'middle',
							pack: 'center'
						},
						items: [{
								xtype: 'button',
								padding: 2,
								text: 'Search',
								reference: 'loanSearchBtn',
								listeners: {
									click: 'onClickLoanSearch'
								}
							},
							{
								xtype: 'button',
								padding: 3,
								text: 'Clear',
								listeners: {
									click: 'onClickSearchClear'
								}
							}
						]
					}],
					items: [
						{
							xtype: 'textfield',
							itemId: 'loanTrackingId',
							reference: 'loanTrackingId',
							fieldLabel: 'Tracking Number',
							columnWidth: .28,
							labelAlign: 'right',
							labelWidth: 100,
							margin : '5 5 5 5',
						},
						{
							xtype: 'textfield',
							itemId: 'bpNoSrc',
							reference: 'bpNoSrc',
							fieldLabel: 'BP No',
							columnWidth: .23,
							labelAlign: 'right',
							labelWidth: 60,
							margin : '5 5 5 5',
						},
						{
							xtype: 'textfield',
							itemId: 'nid4Search',
							reference: 'nid4Search',
							fieldLabel: 'NID',
							columnWidth: .23,
							labelAlign: 'right',
							labelWidth: 50,
							margin : '5 5 5 5',
						},
						{
							xtype: 'textfield',
							itemId: 'accountNo',
							reference: 'accountNo',
							fieldLabel: 'Account No',
							columnWidth: .26,
							labelAlign: 'right',
							labelWidth: 95,
							margin : '5 5 5 5',
							
						},
						{
							xtype: 'textfield',
							itemId: 'phone4Search',
							reference: 'phone4Search',
							fieldLabel: 'Phone',
							columnWidth: .28,
							labelAlign: 'right',
							//left: '15px',
							labelWidth: 100,
							margin : '5 5 5 5',
						},
						{
							xtype: 'datefield',
							columnWidth: 0.23,
							reference: 'fromDate',
							itemId: 'fromDate',
							fieldLabel: 'From Date',
							labelAlign: 'right',
							emptyText: 'From Date',
							labelWidth: 60,
							margin : '5 5 5 5',
							format: 'd M Y',
						}, 
						{
							xtype: 'datefield',
							columnWidth: 0.23,
							itemId: 'toDate',
							reference: 'toDate',
							fieldLabel: 'To Date',
							labelAlign: 'right',
							emptyText: 'To Date',
							labelWidth: 50,
							margin : '5 5 5 5',
							format: 'd M Y',
						},
						{
							xtype: 'textfield',
							itemId: 'applicationNoSrc',
							reference: 'applicationNoSrc',
							fieldLabel: 'Application No',
							columnWidth: 0.26,
							labelAlign: 'right',
							labelWidth: 95,
							margin : '5 5 5 5'
						},
						{
		                    xtype: 'combobox',
		                    itemId: 'dataSourceCombo',
		                    reference: 'dataSourceCombo',
		                    columnWidth: 0.28,
		                    fieldLabel: 'Source',
							labelAlign: 'right',
							labelWidth: 100,
							margin : '5 5 5 5',
		                    mode: 'local',
		                    displayField: 'dataSource',
		                    valueField: 'dataSource',
		                    queryMode: 'local',
		                    forceSelection: true,
		                    triggerAction: 'all',
		                    selectOnFocus:true,
		                    store:'gSourceStore'
		                },
						
					]
				}],
				items: [{
					xtype: 'gridpanel',
					reference: 'loanMainSearchGrid',
					itemId: 'loanMainSearchGrid',
					multiSelect: true,
					loadMask: true,
					store: 'gLoanGridViewStore',
					plugins: [{
						ptype: 'gridfilters'
					}],
					listeners: {
						itemdblclick: 'onLoanGridItemDblClick',
						selectionchange : 'onLoanSearchGridItemSelect'
					},
					viewConfig: {
						stripeRows: true,
						enableTextSelection: true,
					},
					dockedItems: [{
						xtype: 'toolbar',
						dock: 'top',
						itemId: 'searchLoanGridUprToolbar',
						items: [
							{
								xtype: 'textfield',
								itemId: 'loanGridLocalFilter',
								fieldLabel: 'Grid Filter',
								padding: 3,
								left: '6px',
								width: 300,
								labelWidth: 65,
								listeners: {
									change:  'onGridFilterEntryChange'
								}
							},
							{
								text: 'Receive',
								tooltip: 'Receive Loan',
								reference : 'misPullFromGridBtn',
								disabled: true,
								listeners: {
									click: 'misPullFromGridBtnClick'
								}
							},
							{
								xtype: 'tbfill'
							},
							{
								text: 'Bulk Submit',
								tooltip: 'Submit Selected Loan',
								reference: 'bulkSubmit',
								itemId: 'bulkSubmit',
								hidden: true,
								listeners: {
									click: 'onClickBulkSubmit'
								}
							},
							{
								text: 'Make Group',
								tooltip: 'Create Loan Group',
								iconCls :'icon-folder2',
								reference: 'createLoanGroupBtn',
								itemId: 'createLoanGroupBtn',								
								disabled: true,
								hidden: true,
							    //style: 'background-color: #AFEEEE' ,
								listeners: {
									click: 'onCreateLoanGroup'
								}
							},
							{
								text: 'Sanction Letter',
								tooltip: 'Generate Sanction Letter',
								iconCls :'pdf-icon',
								reference: 'cadReport',
								itemId: 'cadReport',
								disabled: true,
								listeners: {
									click: 'generateCadReport'
								}
							},
							{
								text: 'PPC Excel Report',
								tooltip: 'Export to .pdf',
								iconCls :'export-icon',
								reference: 'lmsPPCExcelReport',
								itemId: 'lmsPPCExcelReport',
								disabled:true,
								listeners: {
									click: 'generatelmsPPCExcelReport',
								}
							},
							{
								text: 'MIS-CRM-Excel',
								tooltip: 'Export to .pdf',
								iconCls :'export-icon',
								reference: 'lmsMISExcelReport',
								itemId: 'lmsMISExcelReport',
								disabled:true,
								listeners: {
									click: 'generatelmsMISExcelReport',
								}
							},
							/*{
								text: 'Sanction Screening',
								iconCls: 'pdf-icon',
								tooltip: 'Export to .pdf',
								reference: 'lmsSanctionScreeningPdf',
								itemId: 'lmsSanctionScreeningPdf',
								listeners: {
									click: 'generatelmsSanctionScreeningPdf'
								}
							},*/
							{
								text: 'Loan Report',
								iconCls: 'pdf-icon',
								tooltip: 'Export to .pdf',
								reference: 'loanReportAsPdf',
								itemId: 'loanReportAsPdf',
								disabled:true,
								listeners: {
									click: 'generateLoanGridReport'
								}
							}
						]
					}],
					features: [{
						ftype: 'grouping',
						groupHeaderTpl: '{name} ({children.length})',
						enableNoGroups: true
					}],

					columns: [
						{
							xtype: 'gridcolumn',
							align: 'center',
							width: 100,
							dataIndex: 'loanId',
							hidden: true,
							sortable: true,
							text: 'Loan Id',
						},
						{
							xtype: 'gridcolumn',
							align: 'center',
							width: 100,
							dataIndex: 'loanTrackingId',
							sortable: true,
							text: 'Tracking Number',
						},
						{
							header: "Loan Type",
							align: 'center',
							width: 200,
							sortable: true,
							dataIndex: 'idLoanTypeKey',
							filter: {type: 'list'},
							renderer: function(value, meta, rec ){
								var rec = Ext.data.StoreManager.lookup('gLoanTypeStore').findRecord('configurationId',value);
								if(rec){
									value = rec.data.value1;
								}
								return value;
							}
						},
						{
							xtype: 'gridcolumn',
							align: 'center',
							width: 100,
							dataIndex: 'legalEntityName',
							sortable: true,
							text: 'Creator Branch',
						},
						{
							header: "State",
							align: 'center',
							width: 100,
							sortable: true,
							dataIndex: 'stateDisplayLabel',
							filter: {type: 'list'}
						},
						{
							header: "Loan Group ID",
							align: 'center',
							width: 150,
							sortable: true,
							dataIndex: 'loanGroupId',
							filter: {type: 'string'},
							renderer: function(value, a, rec){
								if(!value){
									if(rec.data.inGroup == 2){
										return "REMOVED FROM GROUP";
									}
								}

								return value;
							}
						},
						{
							header: "Name",
							align: 'center',
							width: 200,
							sortable: true,
							dataIndex: 'customerName',
							filter: {type: 'string'}
						},
						{
							header: "Account No",
							align: 'center',
							width: 200,
							sortable: true,
							dataIndex: 'accountNo',
							filter: {type: 'string'}
						},
						{
							header: "BP No",
							align: 'center',
							width: 200,
							sortable: true,
							dataIndex: 'bpNo',
							filter: {type: 'string'}
						},
						{
							header: "Application No",
							align: 'center',
							width: 200,
							sortable: true,
							dataIndex: 'applicationNo',
							filter: {type: 'string'}
						},
						{
							header: "Recommended for Approval",
							align: 'center',
							width: 200,
							sortable: true,
							dataIndex: 'recommendedForApproval',
							filter: {type: 'string'},
							renderer: function(value){
								if(value < 0){
									return null;
								}
							}
						},
						{
							header: "Cib Status",
							align: 'center',
							width: 200,
							sortable: true,
							dataIndex: 'cibStatus',
							filter: {type: 'list'}
						},
						{
							header: "Creation Date",
							xtype: 'datecolumn',
							align: 'center',
							format:'Y-m-d h:i:s A',
							width: 140,
							sortable: true,
							dataIndex: 'createDate',
							filter: {type: 'date'}
						},
						{
							header: "Applied Loan Amount",
							align: 'center',
							width: 200,
							sortable: true,
							dataIndex: 'appliedLoanAmount',
							filter: {type: 'number'},
							renderer: function (value, meta, record) {
								if (value == -2147483648 || value == null || value === undefined) return 0;
								return value;
							}
						},
						{
							header: "Purpose of Loan",
							align: 'center',
							width: 200,
							sortable: true,
							dataIndex: 'purposeOfLoan',
							filter: {type: 'string'}
						},
						{
							header: "Interest Rate (%)",
							align: 'center',
							width: 200,
							sortable: true,
							dataIndex: 'interestRate',
							filter: {type: 'number'},
							renderer: function (value, meta, record) {
								if (value == -2147483648 || value == null || value === undefined) return 0;
								return value;
							}
						},
						{
							header: "Monthly Installment",
							align: 'center',
							width: 200,
							sortable: true,
							dataIndex: 'monthlyInstallment',
							filter: {type: 'number'},
							renderer: function (value, meta, record) {
								if (value == -2147483648 || value == null || value === undefined) return 0;
								return value;
							}
						},
						{
							header: "Mobile",
							align: 'center',
							width: 200,
							sortable: true,
							dataIndex: 'mobile',
							filter: {type: 'string'}
						},


						{
							header: "Customer Id",
							align: 'center',
							width: 200,
							sortable: true,
							dataIndex: 'customerId',
							filter: {type: 'string'}
						},
						{
							header: "Customer Type",
							align: 'center',
							width: 200,
							sortable: true,
							dataIndex: 'idCustomerTypeKey',
							filter: {type: 'list'},
							renderer: function(value, meta, rec ){
								var rec = Ext.data.StoreManager.lookup('gCustTypeStore').findRecord('configurationId',value);
								if(rec){
									value = rec.data.value1;
								}
								return value;
							}
						},
						{
							header: "BP No",
							align: 'center',
							width: 200,
							sortable: true,
							dataIndex: 'bpNo',
							filter: {type: 'string'}
						},
						{
							header: "NID",
							align: 'center',
							width: 200,
							sortable: true,
							dataIndex: 'nid',
							filter: {type: 'string'}
						},
						{
							header: "TIN",
							align: 'center',
							width: 200,
							sortable: true,
							dataIndex: 'tin',
							filter: {type: 'string'}
						},
						{
							header: "Date Of Birth",
							xtype: 'datecolumn',
							align: 'center',
							format:'Y-m-d',
							width: 100,
							sortable: true,
							dataIndex: 'dateOfBirth',
							filter: {type: 'date'}
						},
						{
							header: "Designation",
							align: 'center',
							width: 200,
							sortable: true,
							dataIndex: 'designation',
							filter: {type: 'list'}
						},
						{
							header: "Joining Date",
							xtype: 'datecolumn',
							align: 'center',
							format:'Y-m-d',
							width: 100,
							sortable: true,
							dataIndex: 'joiningDate',
							filter: {type: 'date'}
						},
						{
							header: "Permanent Address",
							align: 'center',
							width: 200,
							sortable: true,
							dataIndex: 'permanentAddr',
							filter: {type: 'string'}
						},
						{
							header: "Office Address",
							align: 'center',
							width: 200,
							sortable: true,
							dataIndex: 'officeAddr',
							filter: {type: 'string'}
						},
						{
							header: "Marital Status",
							align: 'center',
							width: 200,
							sortable: true,
							dataIndex: 'maritalStatus',
							filter: {type: 'list'}
						},
						{
							header: "Mother Name",
							align: 'center',
							width: 200,
							sortable: true,
							dataIndex: 'motherName',
							filter: {type: 'string'}
						},
						{
							header: "Father Name",
							align: 'center',
							width: 200,
							sortable: true,
							dataIndex: 'fatherName',
							filter: {type: 'string'}
						},
						{
							header: "Spouse",
							align: 'center',
							width: 200,
							sortable: true,
							dataIndex: 'spouse',
							filter: {type: 'string'}
						},
						{
							header: "Creator Name",
							align: 'center',
							width: 200,
							sortable: true,
							dataIndex: 'creatorName',
							filter: {type: 'string'}
						},
						{
							header: "Source",
							align: 'center',
							width: 200,
							sortable: true,
							dataIndex: 'dataSource',
							filter: {type: 'string'}
						},
						{
							header: "District/Division",
							align: 'center',
							width: 200,
							sortable: true,
							dataIndex: 'districtDivision',
							filter: {type: 'string'},
							renderer: function (value, meta, record) {
								if (value == '/' || value == null || value === undefined) {
									return '';
								}else if(value.substring(0, 1) == '/' ){
									return value.substring(1, value.length);
								}else if(value.substring(value.length-1, value.length) == '/' ){
									return value.substring(0, value.length-1);
								}else{
									return value;	
								}
								
							}
						},
						
					],
					selModel: {
						selType: 'checkboxmodel',
						listeners: {
							selectionchange:'onLoanGrdSelChng'
						}
					}
				}]
			},
			{
        		xtype: 'loanGrouping',
        		title: 'Loan Grouping',
        		id: 'idloanGrouping',
        		reference: 'idloanGrouping',
        		disabled: true
            },
            {
				xtype: 'panel',
				id: 'workHistoryTab',
				layout: 'fit',
				title: 'Work History',
				tabConfig: {
					xtype: 'tab',
					id: 'workHistoryTabPanel',
					itemId: 'workHistoryTabPanel'
				},
				dockedItems: [{
					xtype: 'panel',
					dock: 'top',
					itemId: 'workHistorySearchProperties',
					layout: 'column',
					collapseDirection: 'top',
					collapsed: false,
					collapsible: true,
					title: 'Loan Search',
					dockedItems: [{
						xtype: 'toolbar',
						dock: 'bottom',
						shadow: true,
						itemId: 'workHistorySearchTollbar',
						layout: {
							type: 'hbox',
							align: 'middle',
							pack: 'center'
						},
						items: [{
								xtype: 'button',
								padding: 2,
								text: 'Search',
								reference: 'workHistorySearchBtn',
								listeners: {
									click: 'onClickWorkHistorySearch'
								}
							},
							{
								xtype: 'button',
								padding: 3,
								text: 'Clear',
								listeners: {
									click: 'onClickWorkHistorySearchClear'
								}
							}
						]
					}],
					items: [
						{
							xtype: 'datefield',
							columnWidth: 0.23,
							reference: 'fromDateWorkHis',
							itemId: 'fromDateWorkHis',
							fieldLabel: 'From Date',
							labelAlign: 'right',
							emptyText: 'From Date',
							labelWidth: 60,
							margin : '5 5 5 5',
							format: 'd M Y',
						}, 
						{
							xtype: 'datefield',
							columnWidth: 0.23,
							itemId: 'toDateWorkHis',
							reference: 'toDateWorkHis',
							fieldLabel: 'To Date',
							labelAlign: 'right',
							emptyText: 'To Date',
							labelWidth: 50,
							margin : '5 5 5 5',
							format: 'd M Y',
						}
					]
				}],
				items: [{
					xtype: 'gridpanel',
					reference: 'workHistorySearchGrid',
					itemId: 'workHistorySearchGrid',
					multiSelect: true,
					loadMask: true,
					store: 'gWorkHistoryGridViewStore',
					plugins: [{
						ptype: 'gridfilters'
					}],
					viewConfig: {
						stripeRows: true,
						enableTextSelection: true,
					},
					dockedItems: [{
						xtype: 'toolbar',
						dock: 'top',
						itemId: 'workHistoryGridToolbar',
						items: [
							{
								xtype: 'textfield',
								itemId: 'workHistoryGridFilter',
								fieldLabel: 'Grid Filter',
								padding: 3,
								left: '6px',
								width: 300,
								labelWidth: 65,
								listeners: {
									change:  'onGridFilterEntryChange'
								}
							},
							{
								xtype: 'tbfill'
							},
							{
								text: 'Excel Report',
								tooltip: 'Export to Excel',
								iconCls :'export-icon',
								reference: 'workHistoryExcelReport',
								itemId: 'workHistoryExcelReport',
								listeners: {
									click: 'generateExcelReport',
								}
							}
						]
					}],
					features: [{
						ftype: 'grouping',
						groupHeaderTpl: '{name} ({children.length})',
						enableNoGroups: true
					}],

					selModel: {
						selType: 'checkboxmodel'
					},

					columns: [
						{
							xtype: 'gridcolumn',
							align: 'center',
							width: 100,
							dataIndex: 'loanId',
							hidden: true,
							sortable: true,
							text: 'Loan Id',
						},
						{
							xtype: 'gridcolumn',
							align: 'center',
							width: 100,
							dataIndex: 'loanTrackingId',
							sortable: true,
							text: 'Tracking Number',
						},
						{
							xtype: 'gridcolumn',
							align: 'center',
							width: 150,
							dataIndex: 'userName',
							sortable: true,
							text: 'My Name',
						},
						{
							header: "My Action Date",
							xtype: 'datecolumn',
							align: 'center',
							format:'Y-m-d h:i:s A',
							width: 140,
							sortable: true,
							dataIndex: 'dttMod',
							filter: {type: 'date'}
						},
						{
							xtype: 'gridcolumn',
							align: 'center',
							width: 100,
							dataIndex: 'actionName',
							sortable: true,
							text: 'My Action',
						},
						{
							header: "State After Action",
							align: 'center',
							width: 100,
							sortable: true,
							dataIndex: 'stateDisplayLabel',
							filter: {type: 'string'}
						},
						{
							header: "Current State",
							align: 'center',
							width: 100,
							sortable: true,
							dataIndex: 'currentStateName',
							filter: {type: 'string'}
						},
						{
							header: "Creator Name",
							align: 'center',
							width: 200,
							sortable: true,
							dataIndex: 'creatorName',
							filter: {type: 'string'}
						},
						{
							header: "Creation Date",
							xtype: 'datecolumn',
							align: 'center',
							format:'Y-m-d h:i:s A',
							width: 140,
							sortable: true,
							dataIndex: 'createDate',
							filter: {type: 'date'}
						},
						{
							header: "Loan Type",
							align: 'center',
							width: 100,
							sortable: true,
							dataIndex: 'idLoanTypeKey',
							filter: {type: 'list'},
							renderer: function(value, meta, rec ){
								var rec = Ext.data.StoreManager.lookup('gLoanTypeStore').findRecord('configurationId',value);
								if(rec){
									value = rec.data.value1;
								}
								return value;
							}
						},
						{
							header: "Customer Name",
							align: 'center',
							width: 200,
							sortable: true,
							dataIndex: 'customerName',
							filter: {type: 'string'}
						},
						{
							header: "Customer Id",
							align: 'center',
							width: 120,
							sortable: true,
							dataIndex: 'customerId',
							filter: {type: 'string'}
						},
						{
							header: "Customer Type",
							align: 'center',
							width: 120,
							sortable: true,
							dataIndex: 'idCustomerTypeKey',
							filter: {type: 'list'},
							renderer: function(value, meta, rec ){
								var rec = Ext.data.StoreManager.lookup('gCustTypeStore').findRecord('configurationId',value);
								if(rec){
									value = rec.data.value1;
								}
								return value;
							}
						},
						{
							header: "Account No",
							align: 'center',
							width: 200,
							sortable: true,
							dataIndex: 'accountNo',
							filter: {type: 'string'}
						},
						{
							header: "BP No",
							align: 'center',
							width: 200,
							sortable: true,
							dataIndex: 'bpNo',
							filter: {type: 'string'}
						},
						{
							header: "Applied Loan Amount",
							align: 'center',
							width: 150,
							sortable: true,
							dataIndex: 'appliedLoanAmount',
							filter: {type: 'number'},
							renderer: function (value, meta, record) {
								if (value == -2147483648 || value == null || value === undefined) return 0;
								return value;
							}
						},
						{
							header: "Interest Rate (%)",
							align: 'center',
							width: 150,
							sortable: true,
							dataIndex: 'interestRate',
							filter: {type: 'number'},
							renderer: function (value, meta, record) {
								if (value == -2147483648 || value == null || value === undefined) return 0;
								return value;
							}
						},
						{
							header: "Monthly Installment",
							align: 'center',
							width: 150,
							sortable: true,
							dataIndex: 'monthlyInstallment',
							filter: {type: 'number'},
							renderer: function (value, meta, record) {
								if (value == -2147483648 || value == null || value === undefined) return 0;
								return value;
							}
						},
						{
							header: "NID",
							align: 'center',
							width: 200,
							sortable: true,
							dataIndex: 'nid',
							filter: {type: 'string'}
						},
						{
							header: "TIN",
							align: 'center',
							width: 200,
							sortable: true,
							dataIndex: 'tin',
							filter: {type: 'string'}
						},
						{
							header: "Date Of Birth",
							xtype: 'datecolumn',
							align: 'center',
							format:'Y-m-d',
							width: 100,
							sortable: true,
							dataIndex: 'dateOfBirth',
							filter: {type: 'date'}
						},
						{
							header: "Designation",
							align: 'center',
							width: 200,
							sortable: true,
							dataIndex: 'designation',
							filter: {type: 'list'}
						},
						{
							header: "Permanent Address",
							align: 'center',
							width: 200,
							sortable: true,
							dataIndex: 'permanentAddr',
							filter: {type: 'string'}
						},
						{
							header: "Office Address",
							align: 'center',
							width: 200,
							sortable: true,
							dataIndex: 'officeAddr',
							filter: {type: 'string'}
						},
						{
							header: "Marital Status",
							align: 'center',
							width: 100,
							sortable: true,
							dataIndex: 'maritalStatus',
							filter: {type: 'list'}
						},
						{
							header: "Mother Name",
							align: 'center',
							width: 200,
							sortable: true,
							dataIndex: 'motherName',
							filter: {type: 'string'}
						},
						{
							header: "Father Name",
							align: 'center',
							width: 200,
							sortable: true,
							dataIndex: 'fatherName',
							filter: {type: 'string'}
						},
						{
							header: "Spouse",
							align: 'center',
							width: 200,
							sortable: true,
							dataIndex: 'spouse',
							filter: {type: 'string'}
						},
						{
							header: "Source",
							align: 'center',
							width: 100,
							sortable: true,
							dataIndex: 'dataSource',
							filter: {type: 'string'}
						}
					]
				}]
			}
			]
		},
		{
			xtype: 'panel',
			region: 'west',
			split: true,
			id: 'loanWestPanel',
			margin: '5 0 0 0',
			width: 210,
			layout: 'accordion',
			collapsed: false,
			collapsible: true,
			title: 'Loan Menu',
			titleCollapse: true,

			items: [
				{
					xtype: 'treepanel',
					reference: 'loanStatusTree',
					id: 'loanStatusTree',
					title: 'Status',
					useArrows: true,
					rootVisible: false,
					tools:[{
						type:'refresh',
						itemId: 'loanStatusGridRefresh',
						tooltip: 'Refresh Data',
						listeners: {
							click: 'onRefreshStatusTree'
						}
					}]
				},
				{
					xtype: 'treepanel',
					reference: 'createNewLoanTree',
					id: 'createNewLoanTree',
					title: 'Create New Loan',
					useArrows: true,
					rootVisible: false,
					tools:[{
						type:'refresh',
						itemId: 'refreshCreateNewLoanTree',
						tooltip: 'Refresh Data',
						listeners: {
							click: 'onRefreshCreateNewLoanTree'
						}
					}]
				}
			]
		}
	],
	listeners: {
		afterrender: 'onActivateLoanPanelRender',
		beforerender : 'onBeforeLoadLoanPanel'
	}
});